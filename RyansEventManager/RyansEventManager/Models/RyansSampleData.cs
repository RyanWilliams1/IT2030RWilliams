using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.Entity;

namespace RyansEventManager.Models
{
    public class RyansSampleData : DropCreateDatabaseAlways<RyansEventManagerDB>
    {
        protected override void Seed(RyansEventManagerDB context)
        {
            
            var eventType = new List<EventType>
            {
                new EventType {EventTypeName = "Exercise"},
                new EventType {EventTypeName = "Meditation"},
                new EventType {EventTypeName = "Party"},
                new EventType {EventTypeName = "Wedding"},
                new EventType {EventTypeName = "Picnic"},
                new EventType {EventTypeName = "Social"},
                new EventType {EventTypeName = "Comedy"},
                new EventType {EventTypeName = "Seminar"},
                new EventType {EventTypeName = "Education"},
                new EventType {EventTypeName = "Art"},
                new EventType {EventTypeName = "Coding"},
            };

            new List<Event>
            {
                new Event { EventTitle = "Jones Family Reunion", EventDescription = "Jones Family Reunion", StartDate = DateTime.Parse("5/7/2020 1:00:00 PM"), StartTime = DateTime.Parse("5/7/2020 1:00:00 PM") , EndDate = DateTime.Parse("5/7/2020 3:00:00 PM") , EndTime = DateTime.Parse("5/7/2020 3:00:00 PM"), EventLocation = "Park", EventType = eventType.Single(e => e.EventTypeName == "Social"), OrganizerName = "Brayden W", OrganizerContactInfo = "216.225.4444", MaxTickets = 75, AvailableTickets = 75},
                new Event { EventTitle = "Yoga with Ari", EventDescription = "Yoga with an all Ariana Grande playlist", StartDate = DateTime.Parse("5/7/2020 3:00:00 PM"), StartTime = DateTime.Parse("5/7/2020 3:00:00 PM") , EndDate = DateTime.Parse("5/7/2020 6:00:00 PM") , EndTime = DateTime.Parse("5/7/2020 6:00:00 PM"), EventLocation = "Yoga Studio", EventType = eventType.Single(e => e.EventTypeName == "Exercise"), OrganizerName = "Ryan W", OrganizerContactInfo = "216.297.4444", MaxTickets = 23, AvailableTickets = 10},
                new Event { EventTitle = "The Kelly Wedding ", EventDescription = "Save the Date. We Are Getting Hitched!", StartDate = DateTime.Parse("5/9/2020 1:00:00 PM"), StartTime = DateTime.Parse("5/9/2020 1:00:00 PM") , EndDate = DateTime.Parse("5/9/2020 3:00:00 PM") , EndTime = DateTime.Parse("5/9/2020 3:00:00 PM"), EventLocation = "Max Party Center", EventType = eventType.Single(e => e.EventTypeName == "Wedding"), OrganizerName = "Gina P", OrganizerContactInfo = "216.492.4646", MaxTickets = 200, AvailableTickets = 90},
                new Event { EventTitle = "Art on the Lawn", EventDescription = "Art Festival and Sale", StartDate = DateTime.Parse("5/9/2020 3:00:00 PM"), StartTime = DateTime.Parse("5/9/2020 3:00:00 PM") , EndDate = DateTime.Parse("5/9/2020 6:00:00 PM") , EndTime = DateTime.Parse("5/9/2020 6:00:00 PM"), EventLocation = "Legacy Village", EventType = eventType.Single(e => e.EventTypeName == "Art"), OrganizerName = "Brayden W", OrganizerContactInfo = "216.225.4444", MaxTickets = 500, AvailableTickets =425},
                new Event { EventTitle = "Summer Picnik", EventDescription = "Fun, Family, Friends, and Food", StartDate = DateTime.Parse("5/10/2020 12:00:00 PM"), StartTime = DateTime.Parse("5/10/2020 12:00:00 PM") , EndDate = DateTime.Parse("5/10/2020 3:00:00 PM") , EndTime = DateTime.Parse("5/10/2020 3:00:00 PM"), EventLocation = "Garfield Park", EventType = eventType.Single(e => e.EventTypeName == "Picnic"), OrganizerName = "LaShella", OrganizerContactInfo = "216.225.0978", MaxTickets = 230, AvailableTickets = 200},
                new Event { EventTitle = "Girls Can Code", EventDescription = "Learn to Code with Jenny", StartDate = DateTime.Parse("5/11/2020 8:00:00 AM"), StartTime = DateTime.Parse("5/11/2020 8:00:00 AM") , EndDate = DateTime.Parse("5/11/2020 11:00:00 AM") , EndTime = DateTime.Parse("5/11/2020 11:00:00 AM"), EventLocation = "High School Computer Lab", EventType = eventType.Single(e => e.EventTypeName == "Coding"), OrganizerName = "Jenny", OrganizerContactInfo = "216.065.4778", MaxTickets = 28, AvailableTickets = 10},
                new Event { EventTitle = "White Tie Meet and Greet", EventDescription = "Upscale Meet and Greet for the Cities Finest", StartDate = DateTime.Parse("5/12/2020 9:00:00 PM"), StartTime = DateTime.Parse("5/12/2020 9:00:00 PM") , EndDate = DateTime.Parse("5/13/2020 1:00:00 AM") , EndTime = DateTime.Parse("5/13/2020 1:00:00 AM"), EventLocation = "Toms Grand Ballroom", EventType = eventType.Single(e => e.EventTypeName == "Social"), OrganizerName = "Kitty V", OrganizerContactInfo = "440.315.5784", MaxTickets = 150, AvailableTickets = 105},
                new Event { EventTitle = "The Calmest Day", EventDescription = "A How to for Meditation Learners", StartDate = DateTime.Parse("5/13/2020 10:00:00 AM"), StartTime = DateTime.Parse("5/13/2020 10:00:00 AM") , EndDate = DateTime.Parse("5/13/2020 12:00:00 PM") , EndTime = DateTime.Parse("5/13/2020 12:00:00 PM"), EventLocation = "CLE Yoga Beachwood", EventType = eventType.Single(e => e.EventTypeName == "Meditation"), OrganizerName = "Carol B", OrganizerContactInfo = "473.524.4444", MaxTickets = 30, AvailableTickets = 11},
                new Event { EventTitle = "Art Festival", EventDescription = "Where the Art Comes To You", StartDate = DateTime.Parse("5/14/2020 9:00:00 AM"), StartTime = DateTime.Parse("5/14/2020 9:00:00 AM") , EndDate = DateTime.Parse("5/14/2020 9:00:00 PM") , EndTime = DateTime.Parse("5/14/2020 9:00:00 PM"), EventLocation = "Legacy Village", EventType = eventType.Single(e => e.EventTypeName == "Art"), OrganizerName = "Brayden W", OrganizerContactInfo = "216.225.4444", MaxTickets = 500, AvailableTickets = 499},
                new Event { EventTitle = "Williams Family Reunion", EventDescription = "Williams Family Reunion", StartDate = DateTime.Parse("5/15/2020 12:00:00 PM"), StartTime = DateTime.Parse("5/15/2020 12:00:00 PM") , EndDate = DateTime.Parse("5/15/2020 8:00:00 PM") , EndTime = DateTime.Parse("5/15/2020 8:00:00 PM"), EventLocation = "Beachwood Park", EventType = eventType.Single(e => e.EventTypeName == "Picnic"), OrganizerName = "TOM BD", OrganizerContactInfo = "216.788.2356", MaxTickets = 200, AvailableTickets = 97},
                new Event { EventTitle = "Cycling with Ben", EventDescription = "Indoor Cycling At Its Best", StartDate = DateTime.Parse("5/15/2020 12:00:00 PM"), StartTime = DateTime.Parse("5/15/2020 12:00:00 PM") , EndDate = DateTime.Parse("5/15/2020 1:00:00 PM") , EndTime = DateTime.Parse("5/15/2020 1:00:00 PM"), EventLocation = "Cycle Bar Beachwood", EventType = eventType.Single(e => e.EventTypeName == "Exercise"), OrganizerName = "Ben G", OrganizerContactInfo = "ben@cyclebar.com", MaxTickets = 23, AvailableTickets = 10},
                new Event { EventTitle = "The Bryant Wedding", EventDescription = "Bryant Wedding", StartDate = DateTime.Parse("5/15/2020 2:00:00 PM"), StartTime = DateTime.Parse("5/15/2020 2:00:00 PM") , EndDate = DateTime.Parse("5/15/2020 5:00:00 PM") , EndTime = DateTime.Parse("5/15/2020 5:00:00 PM"), EventLocation = "Town Chruch", EventType = eventType.Single(e => e.EventTypeName == "Wedding"), OrganizerName = "Michelle B", OrganizerContactInfo = "234.876.2566", MaxTickets = 203, AvailableTickets = 108},
                new Event { EventTitle = "Painting with Nautre", EventDescription = "Let Nature Be Your Inspiration", StartDate = DateTime.Parse("5/15/2020 12:00:00 PM"), StartTime = DateTime.Parse("5/15/2020 12:00:00 PM") , EndDate = DateTime.Parse("5/15/2020 5:00:00 PM") , EndTime = DateTime.Parse("5/15/2020 5:00:00 PM"), EventLocation = "EdgeWater Park", EventType = eventType.Single(e => e.EventTypeName == "Art"), OrganizerName = "Becky G", OrganizerContactInfo = "BPaints@aol.com", MaxTickets = 50, AvailableTickets = 35},
                new Event { EventTitle = "Picnik Field Day", EventDescription = "The Best Outdoor Activites and Food", StartDate = DateTime.Parse("5/16/2020 8:30:00 AM"), StartTime = DateTime.Parse("5/16/2020 8:30:00 AM") , EndDate = DateTime.Parse("5/16/2020 8:30:00 PM") , EndTime = DateTime.Parse("5/16/2020 8:30:00 PM"), EventLocation = "Cleveland Metropark", EventType = eventType.Single(e => e.EventTypeName == "Party"), OrganizerName = "Karen W", OrganizerContactInfo = "634.456.4357", MaxTickets = 450, AvailableTickets = 325},
                new Event { EventTitle = "Intro to Coding", EventDescription = "Anyone can learn to code in this intro class", StartDate = DateTime.Parse("5/4/2020 10:00:00 AM"), StartTime = DateTime.Parse("5/4/2020 10:00:00 AM") , EndDate = DateTime.Parse("5/4/2020 12:00:00 PM") , EndTime = DateTime.Parse("5/4/2020 12:00:00 PM"), EventLocation = "High School Computer Lab", EventType = eventType.Single(e => e.EventTypeName == "Coding"), OrganizerName = "Jenny", OrganizerContactInfo = "216.065.4778", MaxTickets = 28, AvailableTickets = 18},
                new Event { EventTitle = "Stomach Pain", EventDescription = "Laugh till it huts", StartDate = DateTime.Parse("5/1/2020 3:00:00 PM"), StartTime = DateTime.Parse("5/1/2020 3:00:00 PM") , EndDate = DateTime.Parse("5/1/2020 5:00:00 PM") , EndTime = DateTime.Parse("5/1/2020 5:00:00 PM"), EventLocation = "Improv Cleveland", EventType = eventType.Single(e => e.EventTypeName == "Comedy"), OrganizerName = "Harold", OrganizerContactInfo = "216.735.1060", MaxTickets = 50, AvailableTickets = 1},
                new Event { EventTitle = "Bikers Anonymous", EventDescription = "Meet and Greet for Bike Lovers", StartDate = DateTime.Parse("5/7/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/7/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/7/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/7/2019 12:30:00 PM"), EventLocation = "Harly Davidson Bedford", EventType = eventType.Single(e => e.EventTypeName == "Social"), OrganizerName = "Bryce M", OrganizerContactInfo = "BedfordHarley@sbcglobal.net", MaxTickets = 75, AvailableTickets = 3},
                new Event { EventTitle = "The Season of Crying", EventDescription = "Laugh, Cry, Be Happy", StartDate = DateTime.Parse("5/8/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/8/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/8/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/8/2019 12:30:00 PM"), EventLocation = "Improv Cleveland", EventType = eventType.Single(e => e.EventTypeName == "Comedy"), OrganizerName = "Ellen D", OrganizerContactInfo = "345.742.5785", MaxTickets = 50, AvailableTickets = 13},
                new Event { EventTitle = "Stop, Relax, Breathe", EventDescription = "Meditaion at its best", StartDate = DateTime.Parse("5/7/2019 3:30:00 PM"), StartTime = DateTime.Parse("5/7/2019 3:30:00 PM") , EndDate = DateTime.Parse("5/7/2019 6:30:00 PM") , EndTime = DateTime.Parse("5/7/2019 6:30:00 PM"), EventLocation = "CLE Yoga Studio", EventType = eventType.Single(e => e.EventTypeName == "Meditation"), OrganizerName = "John S", OrganizerContactInfo = "313.847.9475", MaxTickets = 30, AvailableTickets = 10},
                new Event { EventTitle = "Sunset Yoga", EventDescription = "End the Day with a relaxful sunset", StartDate = DateTime.Parse("5/8/2019 8:30:00 PM"), StartTime = DateTime.Parse("5/8/2019 8:30:00 PM") , EndDate = DateTime.Parse("5/8/2019 10:30:00 PM") , EndTime = DateTime.Parse("5/8/2019 10:30:00 PM"), EventLocation = "EdgeWater PArk", EventType = eventType.Single(e => e.EventTypeName == "Exercise"), OrganizerName = "Dwayne J", OrganizerContactInfo = "216.625.7687", MaxTickets = 75, AvailableTickets = 1},
                new Event { EventTitle = "Suttles Family Reunion", EventDescription = "Suttles Family Reunion", StartDate = DateTime.Parse("5/9/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/9/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/9/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/9/2019 12:30:00 PM"), EventLocation = "Beachwood Park", EventType = eventType.Single(e => e.EventTypeName == "Picnic"), OrganizerName = "Karn", OrganizerContactInfo = "321.143.3246", MaxTickets = 150, AvailableTickets = 105},
                new Event { EventTitle = "Swimming with Helga", EventDescription = "Swim with the instructor who trained Michael", StartDate = DateTime.Parse("5/10/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/10/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/10/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/10/2019 12:30:00 PM"), EventLocation = "YMCA Cleveland", EventType = eventType.Single(e => e.EventTypeName == "Exercise"), OrganizerName = "Roger", OrganizerContactInfo = "782.234.6543", MaxTickets = 15, AvailableTickets = 10},
                new Event { EventTitle = "The Morrison Wedding", EventDescription = "Morrison Wedding", StartDate = DateTime.Parse("5/11/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/11/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/11/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/11/2019 12:30:00 PM"), EventLocation = "Cleveland Museum of Art", EventType = eventType.Single(e => e.EventTypeName == "Wedding"), OrganizerName = "Tierra", OrganizerContactInfo = "216.536.7624", MaxTickets = 230, AvailableTickets = 100},
                new Event { EventTitle = "Glassmaking for a Cure", EventDescription = "Make Art, Help in Cancer Research", StartDate = DateTime.Parse("5/7/2019 4:30:00 PM"), StartTime = DateTime.Parse("5/7/2019 4:30:00 PM") , EndDate = DateTime.Parse("5/7/2019 6:30:00 PM") , EndTime = DateTime.Parse("5/7/2019 6:30:00 PM"), EventLocation = "Glassland Mayfield", EventType = eventType.Single(e => e.EventTypeName == "Art"), OrganizerName = "Michael", OrganizerContactInfo = "342.355.1233", MaxTickets = 100, AvailableTickets = 64},
                new Event { EventTitle = "Fall Picnic Appreciation", EventDescription = "See the changing leaves with family fun and food", StartDate = DateTime.Parse("5/7/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/7/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/7/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/7/2019 12:30:00 PM"), EventLocation = "Downtown Bedford", EventType = eventType.Single(e => e.EventTypeName == "Picnic"), OrganizerName = "Brayden W", OrganizerContactInfo = "216.225.4444", MaxTickets = 100, AvailableTickets = 46},
                new Event { EventTitle = "Breaking Security: Can You Crack The Code", EventDescription = "Will you be the first to crack the code, its a competition", StartDate = DateTime.Parse("5/7/2019 10:30:00 AM"), StartTime = DateTime.Parse("5/7/2019 10:30:00 AM") , EndDate = DateTime.Parse("5/7/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/7/2019 12:30:00 PM"), EventLocation = "High School Computer Lab", EventType = eventType.Single(e => e.EventTypeName == "Coding"), OrganizerName = "Jenny", OrganizerContactInfo = "216.065.4778", MaxTickets = 28, AvailableTickets = 10},
                new Event { EventTitle = "Can You Make Us Laugh", EventDescription = "A stage for begginer comedians", StartDate = DateTime.Parse("5/7/2019 8:30:00 PM"), StartTime = DateTime.Parse("5/7/2019 8:30:00 PM") , EndDate = DateTime.Parse("5/8/2019 12:30:00 AM") , EndTime = DateTime.Parse("5/8/2019 12:30:00 AM"), EventLocation = "Improv CLE", EventType = eventType.Single(e => e.EventTypeName == "Comedy"), OrganizerName = "TOM HD", OrganizerContactInfo = "216.524.5878", MaxTickets = 60, AvailableTickets = 10},
                new Event { EventTitle = "Summer Seminar", EventDescription = "The best of summer research", StartDate = DateTime.Parse("5/8/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/8/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/8/2019 12:30:00 PM") , EndTime = DateTime.Parse("5/8/2019 12:30:00 PM"), EventLocation = "Cuyahoga Community College", EventType = eventType.Single(e => e.EventTypeName == "Seminar"), OrganizerName = "Ryan", OrganizerContactInfo = "216.374.1087", MaxTickets = 230, AvailableTickets = 109},
                new Event { EventTitle = "Gratitude", EventDescription = "A Meditation", StartDate = DateTime.Parse("5/7/2019 8:30:00 AM"), StartTime = DateTime.Parse("5/7/2019 8:30:00 AM") , EndDate = DateTime.Parse("5/7/2019 9:30:00 AM") , EndTime = DateTime.Parse("5/7/2019 9:30:00 AM"), EventLocation = "CLE Yoga Studio", EventType = eventType.Single(e => e.EventTypeName == "Meditation"), OrganizerName = "Brayden M", OrganizerContactInfo = "435.234.6542", MaxTickets = 30, AvailableTickets = 21},
                new Event { EventTitle = "Miles Family Reunion", EventDescription = "Miles Family Reunion", StartDate = DateTime.Parse("5/7/2019 1:30:00 PM"), StartTime = DateTime.Parse("5/7/2019 1:30:00 PM") , EndDate = DateTime.Parse("5/7/2019 7:30:00 PM") , EndTime = DateTime.Parse("5/7/2019 7:30:00 PM"), EventLocation = "Bedford MetroPark", EventType = eventType.Single(e => e.EventTypeName == "Social"), OrganizerName = "Tilly M", OrganizerContactInfo = "216.423.6313", MaxTickets = 150, AvailableTickets = 107},
                

            }.ForEach(e => context.Events.Add(e));
        }
    }
}